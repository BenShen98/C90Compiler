
########################################
# Dump for function ifelset, scope level 2 #
########################################
# # Entry dump #
#	# top_id #,	# size(byte) #,	# type(MSB -- LSB) {} #,			# variable name #
#	8,		4,		00000000000000000000000000000000 {},	FUNC RETURN,
#	4,		4,		00000000000000000000000000000000 {},	imm 0,
# -- scope seperation --
#	4,		4,		00000000000000000000000000000000 {},	=op(8) 0:0 0:-4,
# -- scope seperation --
#	0,		4,		00000000000000000000000000000000 {},	x,
#	-4,		4,		00000000000000000000000000000000 {},	y,
# -- scope seperation --

# # TGenReg dump #
#	# regName #,	# StackID #,	# type(MSB -- LSB) #
#	$t0,		2:8,		01000000000000000000000000000000,
#	$t1,		0:-4,		00000000000000000000000000000000,
#	$t2,		1:4,		00000000000000000000000000000000,
#	$t3,		0:0,		00000000000000000000000000000000,
#	$t4,		0:0,		00000000000000000000000000000000,
#	$t5,		0:0,		00000000000000000000000000000000,
#	$t6,		0:0,		00000000000000000000000000000000,
#	$t7,		0:0,		00000000000000000000000000000000,

# End of dump #


########################################
# Dump for function ifelset, scope level 2 #
########################################
# # Entry dump #
#	# top_id #,	# size(byte) #,	# type(MSB -- LSB) {} #,			# variable name #
#	8,		4,		00000000000000000000000000000000 {},	FUNC RETURN,
#	4,		4,		00000000000000000000000000000000 {},	imm 2,
# -- scope seperation --
#	4,		4,		00000000000000000000000000000000 {},	=op(8) 0:0 0:-4,
# -- scope seperation --
#	0,		4,		00000000000000000000000000000000 {},	x,
#	-4,		4,		00000000000000000000000000000000 {},	y,
# -- scope seperation --

# # TGenReg dump #
#	# regName #,	# StackID #,	# type(MSB -- LSB) #
#	$t0,		2:8,		01000000000000000000000000000000,
#	$t1,		0:-4,		00000000000000000000000000000000,
#	$t2,		1:4,		00000000000000000000000000000000,
#	$t3,		0:0,		00000000000000000000000000000000,
#	$t4,		0:0,		00000000000000000000000000000000,
#	$t5,		0:0,		00000000000000000000000000000000,
#	$t6,		0:0,		00000000000000000000000000000000,
#	$t7,		0:0,		00000000000000000000000000000000,

# End of dump #


########################################
# Dump for function ifelset, scope level 1 #
########################################
# # Entry dump #
#	# top_id #,	# size(byte) #,	# type(MSB -- LSB) {} #,			# variable name #
#	4,		4,		00000000000000000000000000000000 {},	=op(8) 0:0 0:-4,
# -- scope seperation --
#	0,		4,		00000000000000000000000000000000 {},	x,
#	-4,		4,		00000000000000000000000000000000 {},	y,
# -- scope seperation --

# # TGenReg dump #
#	# regName #,	# StackID #,	# type(MSB -- LSB) #
#	$t0,		2:8,		00000000000000000000000000000000,
#	$t1,		0:-4,		00000000000000000000000000000000,
#	$t2,		1:4,		00000000000000000000000000000000,
#	$t3,		0:0,		00000000000000000000000000000000,
#	$t4,		0:0,		00000000000000000000000000000000,
#	$t5,		0:0,		00000000000000000000000000000000,
#	$t6,		0:0,		00000000000000000000000000000000,
#	$t7,		0:0,		00000000000000000000000000000000,

# End of dump #


########################################
# Dump for function ifelset, scope level 0 #
########################################
# # Entry dump #
#	# top_id #,	# size(byte) #,	# type(MSB -- LSB) {} #,			# variable name #
#	0,		4,		00000000000000000000000000000000 {},	x,
#	-4,		4,		00000000000000000000000000000000 {},	y,
# -- scope seperation --

# # TGenReg dump #
#	# regName #,	# StackID #,	# type(MSB -- LSB) #
#	$t0,		2:8,		00000000000000000000000000000000,
#	$t1,		0:-4,		00000000000000000000000000000000,
#	$t2,		1:4,		00000000000000000000000000000000,
#	$t3,		0:0,		00000000000000000000000000000000,
#	$t4,		0:0,		00000000000000000000000000000000,
#	$t5,		0:0,		00000000000000000000000000000000,
#	$t6,		0:0,		00000000000000000000000000000000,
#	$t7,		0:0,		00000000000000000000000000000000,

# End of dump #


#############################
# Dump for Context #
#############################

# # Function dump #
ifelset :: 	return:: returnVal<00000000000000000000000000000000>
	para:: 			x<00000000000000000000000000000000>
			 y<00000000000000000000000000000000>
			 

